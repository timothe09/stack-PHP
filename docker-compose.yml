version: '3.3'

services:
  # Service PHP-FPM
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php_app
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
      - ./config/php/php.ini:/usr/local/etc/php/php.ini
    environment:
      - PHP_DISPLAY_ERRORS=1
      - PHP_ERROR_REPORTING=E_ALL
    depends_on:
      - mysql
    networks:
      - app-network

  # Service Nginx
  nginx:
    image: nginx:alpine
    container_name: nginx_server
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - app-network

  # Service MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: app_database
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./config/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  # Service PhpMyAdmin (optionnel pour la gestion de la base)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root_password
      MYSQL_ROOT_PASSWORD: root_password
    depends_on:
      - mysql
    networks:
      - app-network

  # Service Redis (optionnel pour le cache)
  redis:
    image: redis:7-alpine
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

# Volumes pour la persistance des données
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

# Réseau pour la communication entre services
networks:
  app-network:
    driver: bridge
